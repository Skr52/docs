(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{377:function(s,t,a){"use strict";a.r(t);var e=a(45),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"前端面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端面试题"}},[s._v("#")]),s._v(" 前端面试题")]),s._v(" "),a("h2",{attrs:{id:"html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[s._v("#")]),s._v(" HTML")]),s._v(" "),a("h3",{attrs:{id:"link-和-import的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link-和-import的区别"}},[s._v("#")]),s._v(" link 和 @import的区别")]),s._v(" "),a("ul",[a("li",[s._v("link 是XHTML标签，不存在兼容问题，@import 是在 css 2.1 提出的，低版本浏览器不支持。")]),s._v(" "),a("li",[s._v("link 可以加载 css, javascript 文件的， @import 只能加载 css 文件。")]),s._v(" "),a("li",[s._v("link 加载的内容是与页面同步加载，@import 需要网页完全加载完后再进行加载。")])]),s._v(" "),a("h2",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[s._v("#")]),s._v(" CSS")]),s._v(" "),a("h3",{attrs:{id:"bfc特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc特性"}},[s._v("#")]),s._v(" BFC特性")]),s._v(" "),a("p",[a("code",[s._v("BFC")]),s._v(" 就是一个隔离独立的容器，里面的子元素不会影响外面的元素。")]),s._v(" "),a("p",[a("code",[s._v("BFC")]),s._v(" 是怎么产生的 ?")]),s._v(" "),a("hr"),s._v(" "),a("ol",[a("li",[a("p",[s._v("设置元素：display: block, list-item, table, flex, inline-block;")])]),s._v(" "),a("li",[a("p",[s._v("设置元素属性：float值不为none, position值为absolute, fixed, overflow值不为visible;")])])]),s._v(" "),a("p",[a("code",[s._v("BFC")]),s._v(" 解决了什么问题 ?")]),s._v(" "),a("hr"),s._v(" "),a("ol",[a("li",[s._v("清除元素内部的浮动。")]),s._v(" "),a("li",[s._v("外边距合并问题。")]),s._v(" "),a("li",[s._v("制作右侧自适应盒子问题。")])]),s._v(" "),a("h3",{attrs:{id:"css选择器优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css选择器优先级"}},[s._v("#")]),s._v(" CSS选择器优先级")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("important "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 行内样式 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 通配符 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 浏览器自定义或继承\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 权限值")]),s._v("\n行内样式："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ID")]),s._v("选择器："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v("选择器："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML")]),s._v("标签选择器："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[s._v("#")]),s._v(" 盒子模型")]),s._v(" "),a("ol",[a("li",[s._v("标准盒模型")]),s._v(" "),a("li",[s._v("IE盒模型")])]),s._v(" "),a("p",[s._v("两种模型之间区别")]),s._v(" "),a("hr"),s._v(" "),a("ol",[a("li",[s._v("标准盒模型内容的宽和高等于他实际内容的宽和高。")]),s._v(" "),a("li",[s._v("IE盒模型内容的宽和高包括了"),a("code",[s._v("padding")]),s._v(" 和 "),a("code",[s._v("border")]),s._v("。")])]),s._v(" "),a("h3",{attrs:{id:"css-position定位-relative、absolute、fixed、sticky-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-position定位-relative、absolute、fixed、sticky-特点"}},[s._v("#")]),s._v(" CSS position定位（relative、absolute、fixed、sticky）特点")]),s._v(" "),a("p",[s._v("reletive 相对定位")]),s._v(" "),a("ul",[a("li",[s._v("相对于自身的位置进行定位，不会脱离文档流，占用位置。")]),s._v(" "),a("li",[s._v("不影响其他元素布局。")]),s._v(" "),a("li",[s._v("不影响元素本身特性（无论区块元素还是内联元素会保留其原本特性）")])]),s._v(" "),a("p",[s._v("aosolute 绝对定位")]),s._v(" "),a("ul",[a("li",[s._v("脱离文档流")]),s._v(" "),a("li",[s._v("使行内元素支持宽高（让行内元素具备块内元素特性）")]),s._v(" "),a("li",[s._v("使块内元素默认宽根据内容决定（让块内元素具备行内元素特性）")]),s._v(" "),a("li",[s._v("如果父级元素具备（relative、absolute、fixed）定位，根据父级元素进行偏移，没有就根据浏览器来进行偏移。")]),s._v(" "),a("li",[s._v("如果父级元素中有多个具备定位模式，根据自己最近的父级元素偏移。")])]),s._v(" "),a("p",[s._v("fixed 固定定位")]),s._v(" "),a("ul",[a("li",[s._v("脱离文档流")]),s._v(" "),a("li",[s._v("使行内元素支持宽高（让行内元素具备块内元素特性）")]),s._v(" "),a("li",[s._v("使块内元素默认宽根据内容决定（让块内元素具备行内元素特性）")]),s._v(" "),a("li",[s._v("根据浏览器窗口进行偏移。不受浏览器滚动条的影响依然固定在位置中。")])]),s._v(" "),a("p",[s._v("sticky 粘性定位")]),s._v(" "),a("ul",[a("li",[s._v("在没有达到指定的时候，已 "),a("code",[s._v("relative")]),s._v(" 进行定位。到达了指定文字，已 "),a("code",[s._v("fixed")]),s._v(" 进行定位。")]),s._v(" "),a("li",[a("code",[s._v("left")]),s._v(" 和 "),a("code",[s._v("right")]),s._v(" 一同指定时 "),a("code",[s._v("left")]),s._v(" 的优先级大于 "),a("code",[s._v("right")]),s._v("。 "),a("code",[s._v("top")]),s._v(" 和 "),a("code",[s._v("bottom")]),s._v(" 一同指定时 "),a("code",[s._v("top")]),s._v(" 的优先级大于 "),a("code",[s._v("bottom")]),s._v("。")])]),s._v(" "),a("h2",{attrs:{id:"js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[s._v("#")]),s._v(" JS")]),s._v(" "),a("h3",{attrs:{id:"js-中有哪些类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中有哪些类型"}},[s._v("#")]),s._v(" JS 中有哪些类型")]),s._v(" "),a("p",[s._v("基本类型有 7 种："),a("code",[s._v("String")]),s._v("、"),a("code",[s._v("Number")]),s._v("、"),a("code",[s._v("Boolean")]),s._v("、"),a("code",[s._v("null")]),s._v("、"),a("code",[s._v("undefined")]),s._v("、"),a("code",[s._v("symbel")]),s._v("、"),a("code",[s._v("bigInt")]),s._v("。")]),s._v(" "),a("p",[s._v("引用类型有 1 种："),a("code",[s._v("Object")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"js-中有哪些内置函数-数据封装类对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中有哪些内置函数-数据封装类对象"}},[s._v("#")]),s._v(" JS 中有哪些内置函数（数据封装类对象）")]),s._v(" "),a("p",[s._v("分别有："),a("code",[s._v("Object")]),s._v("、"),a("code",[s._v("Array")]),s._v("、"),a("code",[s._v("Boolean")]),s._v("、"),a("code",[s._v("String")]),s._v("、"),a("code",[s._v("Number")]),s._v("、"),a("code",[s._v("Date")]),s._v("、"),a("code",[s._v("Function")]),s._v("、"),a("code",[s._v("RegExp")]),s._v("、"),a("code",[s._v("Error")])]),s._v(" "),a("h3",{attrs:{id:"js-中什么是作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中什么是作用域"}},[s._v("#")]),s._v(" JS 中什么是作用域")]),s._v(" "),a("p",[s._v("某个变量或函数能够访问的范围，区域。")]),s._v(" "),a("h3",{attrs:{id:"js-中什么是作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中什么是作用域链"}},[s._v("#")]),s._v(" JS 中什么是作用域链")]),s._v(" "),a("p",[s._v("凡是定义一个函数，那么这个函数就构成一个作用域，如果函数中还有函数，那么在这个作用域中就又诞生-个作用域，\n将这样的作用域列出来，就可以有一个：函数内指向函数外的链式结构。")]),s._v(" "),a("p",[s._v("作用域链变量访问规则：看变量在当前作用域中，是否有变量的定义或赋值，如果有，则直接使用，没有，则到外面一层的\n作用域中查看，如果有，则停止查找，使用外面一层作用域中定义的变量或值，如果还是没有，则继续往外查找，直到\n最外层的全局中。全局中也没有定义，则会报错：xx is not defined;（函数在定义的时候，作用域就已经确定。）")]),s._v(" "),a("h3",{attrs:{id:"js-中什么是闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中什么是闭包"}},[s._v("#")]),s._v(" JS 中什么是闭包")]),s._v(" "),a("p",[s._v("有权访问另一个函数作用域中的变量的函数；一般情况就是在一个函数中包含另一个函数。")]),s._v(" "),a("p",[s._v("闭包有什么特性 ?")]),s._v(" "),a("hr"),s._v(" "),a("ol",[a("li",[s._v("隐藏变量，避免全局污染")]),s._v(" "),a("li",[s._v("可以读取函数内部的变量")])]),s._v(" "),a("h3",{attrs:{id:"js-中-new-操作符进行了什么操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中-new-操作符进行了什么操作"}},[s._v("#")]),s._v(" JS 中 new 操作符进行了什么操作")]),s._v(" "),a("ol",[a("li",[s._v("创建一个空对象；")]),s._v(" "),a("li",[s._v("将新对象的原型指向构造函数的原型；")]),s._v(" "),a("li",[s._v("将新对象作为 this 上下文，执行构造函数；")]),s._v(" "),a("li",[s._v("判断构造函数的返回值类型，如果是值类型，返回新对象。如果是引用类型，返回构造函数的引用类型。")])]),s._v(" "),a("p",[s._v("代码演示")]),s._v(" "),a("hr"),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("createNew")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("rest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个新对象")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将新对象的原型链接到构造函数的原型")]),s._v("\n      obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_proto_ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过 call, apply 方式将 obj 作为 this, 执行构造函数代码")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("rest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断构造函数返回值，并返回其值")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" resultObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'object'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          resultObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" result\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          resultObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" resultObj\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" fn2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("createNew")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张三'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fn2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("h3",{attrs:{id:"js-中事件传播的机制是怎么样的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中事件传播的机制是怎么样的"}},[s._v("#")]),s._v(" JS 中事件传播的机制是怎么样的")]),s._v(" "),a("p",[s._v("事件捕获：最先接受到事件的元素（document）依次往下传递有注册事件的元素（目标元素）")]),s._v(" "),a("p",[s._v("事件冒泡：当前的事件源会逐步的向上传递事件，直到最开始接受的元素（document）")]),s._v(" "),a("h3",{attrs:{id:"js-中什么是dom事件流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中什么是dom事件流"}},[s._v("#")]),s._v(" JS 中什么是DOM事件流")]),s._v(" "),a("ol",[a("li",[s._v("事件捕获阶段")]),s._v(" "),a("li",[s._v("处于目标阶段")]),s._v(" "),a("li",[s._v("事件冒泡阶段")])]),s._v(" "),a("h2",{attrs:{id:"框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架"}},[s._v("#")]),s._v(" 框架")]),s._v(" "),a("h3",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[s._v("#")]),s._v(" Vue")]),s._v(" "),a("h4",{attrs:{id:"vue-中-router-和-route-区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-中-router-和-route-区别是什么"}},[s._v("#")]),s._v(" Vue 中 router 和 route 区别是什么")]),s._v(" "),a("p",[a("code",[s._v("router")]),s._v(" 代表全局的路由实例，在这其中可以进行路由跳转操作。")]),s._v(" "),a("p",[a("code",[s._v("route")]),s._v(" 代表当前路由信息对象，在这其中包含了当前URL 解析到的信息，匹配到的 route records 路由记录")]),s._v(" "),a("h4",{attrs:{id:"vue-中路由传参数有几种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-中路由传参数有几种方式"}},[s._v("#")]),s._v(" Vue 中路由传参数有几种方式")]),s._v(" "),a("ol",[a("li",[s._v("params 形式 "),a("code",[s._v("this.$router.push({ name: 'home', params: { age: 10 } })")])])]),s._v(" "),a("blockquote",[a("p",[s._v("在路由配置中，路径参数以冒号：表示。")])]),s._v(" "),a("blockquote",[a("p",[s._v("const router = [ "),a("br"),s._v("\n// 动态段以冒号开始\n"),a("br"),s._v("\n{\nname: 'home',\npath: '/home/:age'\n}\n"),a("br"),s._v("\n]")])]),s._v(" "),a("p",[s._v("注意：如果提供了 path， params 会被忽略。")]),s._v(" "),a("blockquote",[a("p",[s._v("// "),a("code",[s._v("params")]),s._v(" 不能与 "),a("code",[s._v("path")]),s._v(" 一起使用 "),a("br"),s._v(" router.push({ path: '/details', params: { id: '001' } }) // -> /details")])]),s._v(" "),a("p",[s._v("获取方式："),a("code",[s._v("this.$route.params")]),s._v(" 方式")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("query 形式 "),a("code",[s._v("this.$router.push({ name: 'home', query: { age: 10 } })")]),s._v(",\n这个不用在路由配置中加冒号，他是直接拼接到 url 地址上面，"),a("code",[s._v("home?age=10")]),s._v("。")])]),s._v(" "),a("p",[s._v("获取方式："),a("code",[s._v("this.$route.query")]),s._v(" 方式")]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("hash 形式 "),a("code",[s._v("this.$router.push({ name: 'home', hash: '#cad' })")])])]),s._v(" "),a("p",[s._v("获取方式："),a("code",[s._v("this.$route.hash.slice(1)")]),s._v(" 方式")]),s._v(" "),a("h3",{attrs:{id:"react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[s._v("#")]),s._v(" React")])])}),[],!1,null,null,null);t.default=r.exports}}]);